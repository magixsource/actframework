node {
   def mvnHome

   stage('Preparation') {
      // Get some code from a GIT repository
      checkout([
      	$class: 'GitSCM', 
      	branches: [[name: '*/feature-docker']], 
      	doGenerateSubmoduleConfigurations: false, 
      	extensions: [], 
      	submoduleCfg: [], 
      	userRemoteConfigs: [[url: 'https://github.com/magixsource/actframework.git']]
      ])
      
      mvnHome = tool 'maven-3.3.9'    
   }
   
   stage('Packaging & build docker image') {
   	echo '======================'
   	echo 'begin packaging by maven'
    // docker:build will connect localhost:2375
    sh "${mvnHome}/bin/mvn -Dmaven.test.failure.ignore clean package docker:build -DskipDockerPush -DdockerImageTags=latest -DdockerImageTags=$BUILD_NUMBER"
   	echo 'packaging completed'
   }
   
   stage('Stop testapp-server') {
	   	try {
	   		dir('/home/ubuntu/docker/sandbox/tesetapp/') {
	   			sh "docker-compose -f app.yml down"
	   		}
	   	} catch (error) {
	   		echo '[WARN] docker compose down application error,Maybe application havn\'t started.'
	    }	
	  		
  	}
  	
  	stage('Remove pre docker image') {
  		try {
  			sh "docker rmi testapp:$currentBuild.previousBuild.number" 
  		}catch (error) {
  			echo '[WARN] docker remove previous image error,Maybe previous image is not existd.'
  		}
	    
	}
	
	 stage('Remove docker-compose.yml file') {
	 	try {
	 		echo '======================'
	 		echo 'remove docker-compose.yml file'
	 		dir('/home/ubuntu/docker/sandbox/testapp/') {
	 		 	sh "rm -rf app.yml"
	 		}
	        echo 'remove docker-compose.yml file success !'
	 	}
	 	catch (error) {
	 		echo '[WARN] docker remove docker-compose.yml file error.'
	 	}
     	
     }
     
     stage('Copy docker-compose.yml file') {
    	echo '======================'
        echo 'cp docker-compose.yml to here'
        sh "cp ~/.jenkins/workspace/testapp/target/docker/app.yml ~/docker/sandbox/testapp/"
        echo 'cp docker-compose.yml success !'
     }
        
      	
   stage('Start testapp-server') {
      dir('/home/ubuntu/docker/sandbox/testapp/') {
      	sh "docker-compose -f app.yml up -d"
      }
   }

   stage('Results') {
      echo 'Success!'
   }
}